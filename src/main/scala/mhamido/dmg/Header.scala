package mhamido.dmg

import scala.util.Try

final case class Header private (
    entry: Int,
    logo: Array[Byte],
    titleBytes: Array[Byte],
    newPublisherCode: Int,
    sgbFlag: Byte,
    cartridgeType: Byte,
    romSizeCode: Byte,
    ramSizeCode: Byte,
    destination: Byte,
    oldPublisherCode: Byte,
    versions: Byte,
    checksum: Byte,
    globalChecksum: Int
) {
  def publisher: String = {
    if (oldPublisherCode == 0x33)
      Header.NewPublisherCode.getOrElse(newPublisherCode, "UNKNOWN")
    else
      Header.OldPublisherCodes.getOrElse(oldPublisherCode, "UNKNOWN")
  }

  def sgb: Boolean = sgbFlag == 0x03

  def ramSize: Int = ramSizeCode match {
    case 0x02 => 8
    case 0x03 => 32
    case 0x04 => 128
    case 0x05 => 64
    case 0x00 => 0
    case _    => -1
  }

  def romSize: Int = 32 * (1 << romSizeCode.toInt)

  def title: String = titleBytes.toAscii
  def kind: String = Header.RomTypes.getOrElse(cartridgeType.toInt, "UNKNOWN")
}

object Header {
  def apply(bytes: Array[Byte]): Try[Header] = Try {
    new Header(
      entry = bytes.slice(0x0100, 0x0104).toInt,
      logo = bytes.slice(0x0104, 0x0134),
      titleBytes = bytes.slice(0x0134, 0x0144),
      newPublisherCode = bytes.slice(0x0144, 0x0146).toInt,
      sgbFlag = bytes(0x0146),
      cartridgeType = bytes(0x0147),
      romSizeCode = bytes(0x0148),
      ramSizeCode = bytes(0x0149),
      destination = bytes(0x014a),
      oldPublisherCode = bytes(0x014b),
      versions = bytes(0x014c),
      checksum = bytes(0x014d),
      globalChecksum = bytes.slice(0x014e, 0x0150).toInt
    )
  }

  val RomTypes: Map[Int, String] = Map(
    0x00 -> "ROM ONLY",
    0x01 -> "MBC1",
    0x02 -> "MBC1+RAM",
    0x03 -> "MBC1+RAM+BATTERY",
    0x05 -> "MBC2",
    0x06 -> "MBC2+BATTERY",
    0x08 -> "ROM+RAM 1",
    0x09 -> "ROM+RAM+BATTERY 1",
    0x0b -> "MMM01",
    0x0c -> "MMM01+RAM",
    0x0d -> "MMM01+RAM+BATTERY",
    0x0f -> "MBC3+TIMER+BATTERY",
    0x10 -> "MBC3+TIMER+RAM+BATTERY 2",
    0x11 -> "MBC3",
    0x12 -> "MBC3+RAM 2",
    0x13 -> "MBC3+RAM+BATTERY 2",
    0x19 -> "MBC5",
    0x1a -> "MBC5+RAM",
    0x1b -> "MBC5+RAM+BATTERY",
    0x1c -> "MBC5+RMBLE",
    0x1d -> "MBC5+RMBLE+RAM",
    0x1e -> "MBC5+RMBLE+RAM+BATTERY",
    0x20 -> "MBC6",
    0x22 -> "MBC7+SENSOR+RMBLE+RAM+BATTERY",
    0xfc -> "POCKET CAMERA",
    0xfd -> "BANDAI TAMA5",
    0xfe -> "HC3",
    0xff -> "HC1+RAM+BATTERY"
  )

  val OldPublisherCodes: Map[Int, String] = Map(
    0x00 -> "None",
    0x01 -> "Nintendo",
    0x08 -> "Capcom",
    0x09 -> "Hot-B",
    0x0a -> "Jaleco",
    0x0b -> "Coconts Japan",
    0x0c -> "Elite Systems",
    0x13 -> "EA (Electronic Arts)",
    0x18 -> "Hdsonsoft",
    0x19 -> "ITC Entertainment",
    0x1a -> "Yanoman",
    0x1d -> "Japan Clary",
    0x1f -> "Virgin Interactive",
    0x24 -> "PCM Complete",
    0x25 -> "San-X",
    0x28 -> "Kotobki Systems",
    0x29 -> "Seta",
    0x30 -> "Infogrames",
    0x31 -> "Nintendo",
    0x32 -> "Bandai",
    0x33 -> "Indicates that the [New licensee<#0144-0145 - New licensee shold be sed instead.",
    0x34 -> "Konami",
    0x35 -> "HectorSoft",
    0x38 -> "Capcom",
    0x39 -> "Banpresto",
    0x3c -> ".Entertainment i",
    0x3e -> "Gremlin",
    0x41 -> "bisoft",
    0x42 -> "Atls",
    0x44 -> "Malibu",
    0x46 -> "Angel",
    0x47 -> "Spectrm Holoby",
    0x49 -> "Irem",
    0x4a -> "Virgin Interactive",
    0x4d -> "Malibu",
    0x4f -> "U.S. Gold",
    0x50 -> "Absolte",
    0x51 -> "Acclaim",
    0x52 -> "Activision",
    0x53 -> "American Sammy",
    0x54 -> "GameTek",
    0x55 -> "Park Place",
    0x56 -> "LJN",
    0x57 -> "Matchbox",
    0x59 -> "Milton Bradley",
    0x5a -> "Mindscape",
    0x5b -> "Romstar",
    0x5c -> "Naxat Soft",
    0x5d -> "Tradewest",
    0x60 -> "Tits",
    0x61 -> "Virgin Interactive",
    0x67 -> "Ocean Interactive",
    0x69 -> "EA (Electronic Arts)",
    0x6e -> "Elite Systems",
    0x6f -> "Electro Brain",
    0x70 -> "Infogrames",
    0x71 -> "Interplay",
    0x72 -> "Broderbnd",
    0x73 -> "Sclptered Soft",
    0x75 -> "The Sales Crve",
    0x78 -> "t.hq",
    0x79 -> "Accolade",
    0x7a -> "Triffix Entertainment",
    0x7c -> "Microprose",
    0x7f -> "Kemco",
    0x80 -> "Misawa Entertainment",
    0x83 -> "Lozc",
    0x86 -> "Tokma Shoten Intermedia",
    0x8b -> "Bllet-Proof Software",
    0x8c -> "Vic Tokai",
    0x8e -> "Ape",
    0x8f -> "I’Max",
    0x91 -> "Chnsoft Co.",
    0x92 -> "Video System",
    0x93 -> "Tsbaraya Prodctions Co.",
    0x95 -> "Varie Corporation",
    0x96 -> "Yonezawa/S’Pal",
    0x97 -> "Kaneko",
    0x99 -> "Arc",
    0x9a -> "Nihon Bssan",
    0x9b -> "Tecmo",
    0x9c -> "Imagineer",
    0x9d -> "Banpresto",
    0x9f -> "Nova",
    0xa1 -> "Hori Electric",
    0xa2 -> "Bandai",
    0xa4 -> "Konami",
    0xa6 -> "Kawada",
    0xa7 -> "Takara",
    0xa9 -> "Technos Japan",
    0xaa -> "Broderbnd",
    0xac -> "Toei Animation",
    0xad -> "Toho",
    0xaf -> "Namco",
    0xb0 -> "acclaim",
    0xb1 -> "ASCII or Nexsoft",
    0xb2 -> "Bandai",
    0xb4 -> "Sqare Enix",
    0xb6 -> "HAL Laboratory",
    0xb7 -> "SNK",
    0xb9 -> "Pony Canyon",
    0xba -> "Clture Brain",
    0xbb -> "Snsoft",
    0xbd -> "Sony Imagesoft",
    0xbf -> "Sammy",
    0xc0 -> "Taito",
    0xc2 -> "Kemco",
    0xc3 -> "Sqaresoft",
    0xc4 -> "Tokma Shoten Intermedia",
    0xc5 -> "Data East",
    0xc6 -> "Tonkinhose",
    0xc8 -> "Koei",
    0xc9 -> "FL",
    0xca -> "ltra",
    0xcb -> "Vap",
    0xcc -> "se Corporation",
    0xcd -> "Meldac",
    0xce -> ".Pony Canyon or",
    0xcf -> "Angel",
    0xd0 -> "Taito",
    0xd1 -> "Sofel",
    0xd2 -> "Qest",
    0xd3 -> "Sigma Enterprises",
    0xd4 -> "ASK Kodansha Co.",
    0xd6 -> "Naxat Soft",
    0xd7 -> "Copya System",
    0xd9 -> "Banpresto",
    0xda -> "Tomy",
    0xdb -> "LJN",
    0xdd -> "NCS",
    0xde -> "Hman",
    0xdf -> "Altron",
    0xe0 -> "Jaleco",
    0xe1 -> "Towa Chiki",
    0xe2 -> "Ytaka",
    0xe3 -> "Varie",
    0xe5 -> "Epcoh",
    0xe7 -> "Athena",
    0xe8 -> "Asmik ACE Entertainment",
    0xe9 -> "Natsme",
    0xea -> "King Records",
    0xeb -> "Atls",
    0xec -> "Epic/Sony Records",
    0xee -> "IGS",
    0xf0 -> "A Wave",
    0xf3 -> "Extreme Entertainment",
    0xff -> "LJN"
  )

  val NewPublisherCode: Map[Int, String] = Map(
    0x00 -> "None",
    0x01 -> "Nintendo R&D1",
    0x08 -> "Capcom",
    0x13 -> "Electronic Arts",
    0x18 -> "Hdson Soft",
    0x19 -> "b-ai",
    0x20 -> "kss",
    0x22 -> "pow",
    0x24 -> "PCM Complete",
    0x25 -> "san-x",
    0x28 -> "Kemco Japan",
    0x29 -> "seta",
    0x30 -> "Viacom",
    0x31 -> "Nintendo",
    0x32 -> "Bandai",
    0x33 -> "Ocean/Acclaim",
    0x34 -> "Konami",
    0x35 -> "Hector",
    0x37 -> "Taito",
    0x38 -> "Hdson",
    0x39 -> "Banpresto",
    0x41 -> "bi Soft",
    0x42 -> "Atls",
    0x44 -> "Malibu",
    0x46 -> "angel",
    0x47 -> "Bllet-Proof",
    0x49 -> "irem",
    0x50 -> "Absolte",
    0x51 -> "Acclaim",
    0x52 -> "Activision",
    0x53 -> "American sammy",
    0x54 -> "Konami",
    0x55 -> "Hi tech entertainment",
    0x56 -> "LJN",
    0x57 -> "Matchbox",
    0x58 -> "Mattel",
    0x59 -> "Milton Bradley",
    0x60 -> "Tits",
    0x61 -> "Virgin",
    0x64 -> "LcasArts",
    0x67 -> "Ocean",
    0x69 -> "Electronic Arts",
    0x70 -> "Infogrames",
    0x71 -> "Interplay",
    0x72 -> "Broderbnd",
    0x73 -> "sclptured",
    0x75 -> "sci",
    0x78 -> "THQ",
    0x79 -> "Accolade",
    0x80 -> "misawa",
    0x83 -> "lozc",
    0x86 -> "Tokma Shoten Intermedia",
    0x87 -> "Tskuda Original",
    0x91 -> "Chnsoft",
    0x92 -> "Video system",
    0x93 -> "Ocean/Acclaim",
    0x95 -> "Varie",
    0x96 -> "Yonezawa",
    0x97 -> "Kaneko",
    0x99 -> "Pack in soft",
    0xa4 -> "Konami (Yu-Gi-Oh!)"
  )
}
